ERROR 2023-08-03 18:33:30  "on.py" "send" "121" Traceback (most recent call last):
  File "C:\Users\yinglan\AppData\Local\Programs\Python\Python311\Lib\site-packages\starlette\routing.py", line 677, in lifespan
    async with self.lifespan_context(app) as maybe_state:
  File "C:\Users\yinglan\AppData\Local\Programs\Python\Python311\Lib\site-packages\starlette\routing.py", line 566, in __aenter__
    await self._router.startup()
  File "C:\Users\yinglan\AppData\Local\Programs\Python\Python311\Lib\site-packages\starlette\routing.py", line 654, in startup
    await handler()
  File "C:\Users\yinglan\PycharmProjects\keluo_server\app\db\cache.py", line 24, in startup_event
    app.state.redis = await aioredis.from_url(settings.getRedisURL())
                                              ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\yinglan\PycharmProjects\keluo_server\app\core\config.py", line 75, in getRedisURL
    return f"redis://{pwd}{self.REDIS_HOST}:{self.REDIS_PORT}/{self.REDIS_DB}?encoding=utf-8"
                                                               ^^^^^^^^^^^^^
  File "C:\Users\yinglan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pydantic\main.py", line 726, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'Settings' object has no attribute 'REDIS_DB'

ERROR 2023-08-03 18:33:30  "on.py" "startup" "57" Application startup failed. Exiting.
ERROR 2023-08-04 15:52:23  "on.py" "send" "134" Traceback (most recent call last):
  File "C:\Users\yinglan\AppData\Local\Programs\Python\Python311\Lib\asyncio\queues.py", line 158, in get
    await getter
GeneratorExit

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\yinglan\AppData\Local\Programs\Python\Python311\Lib\site-packages\starlette\routing.py", line 686, in lifespan
    await receive()
  File "C:\Users\yinglan\AppData\Local\Programs\Python\Python311\Lib\site-packages\uvicorn\lifespan\on.py", line 137, in receive
    return await self.receive_queue.get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\yinglan\AppData\Local\Programs\Python\Python311\Lib\asyncio\queues.py", line 160, in get
    getter.cancel()  # Just in case getter is not done yet.
    ^^^^^^^^^^^^^^^
  File "C:\Users\yinglan\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 761, in call_soon
    self._check_closed()
  File "C:\Users\yinglan\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 519, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed

